<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CSS3基础</title>
    <link href="/2022/03/31/CSS3%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/03/31/CSS3%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="CSS的语法规范"><a href="#CSS的语法规范" class="headerlink" title="CSS的语法规范"></a>CSS的语法规范</h1><h2 id="规则由两个主要部分构成：选择器以及一条或多条声明"><a href="#规则由两个主要部分构成：选择器以及一条或多条声明" class="headerlink" title="规则由两个主要部分构成：选择器以及一条或多条声明"></a>规则由两个主要部分构成：选择器以及一条或多条声明</h2><h3 id="选择器是用于指定CSS样式的HTML标签，花括号内是给该标签设置的具体样式"><a href="#选择器是用于指定CSS样式的HTML标签，花括号内是给该标签设置的具体样式" class="headerlink" title="选择器是用于指定CSS样式的HTML标签，花括号内是给该标签设置的具体样式"></a>选择器是用于指定CSS样式的HTML标签，花括号内是给该标签设置的具体样式</h3><p>注意点</p><ul><li>在不创建新CSS的情况下 在在title标签 和 head标签之间 写style标签<del>在style标签内写CSS</del> </li><li>属性和值直接用英语下的:分隔 以键值对形式出现</li><li>多对 键值对 之间用英语状态下的; 分割<h3 id="选择器的作用就是根据不同需求把不同的标签选出来的东西，简而言之就是选择标签用的"><a href="#选择器的作用就是根据不同需求把不同的标签选出来的东西，简而言之就是选择标签用的" class="headerlink" title="选择器的作用就是根据不同需求把不同的标签选出来的东西，简而言之就是选择标签用的"></a>选择器的作用就是根据不同需求把不同的标签选出来的东西，简而言之就是选择标签用的</h3><img src="https://s2.loli.net/2022/04/01/EOUGYjXu69Kdvih.png" alt="选择器作用"><h3 id="选择器分为2大类-基础选择器和复合选择器"><a href="#选择器分为2大类-基础选择器和复合选择器" class="headerlink" title="选择器分为2大类 基础选择器和复合选择器"></a>选择器分为2大类 基础选择器和复合选择器</h3><h3 id="基础选择器是由单个选择器组成的"><a href="#基础选择器是由单个选择器组成的" class="headerlink" title="基础选择器是由单个选择器组成的"></a>基础选择器是由单个选择器组成的</h3><h3 id="基础选择器又包括-标签选择器、类选择器、id选择器、通配符选择器"><a href="#基础选择器又包括-标签选择器、类选择器、id选择器、通配符选择器" class="headerlink" title="基础选择器又包括:标签选择器、类选择器、id选择器、通配符选择器"></a>基础选择器又包括:标签选择器、类选择器、id选择器、通配符选择器</h3><h2 id="标签选择器就是以标签名作为选择器-并自动将样式应用到所有的该标签"><a href="#标签选择器就是以标签名作为选择器-并自动将样式应用到所有的该标签" class="headerlink" title="标签选择器就是以标签名作为选择器 并自动将样式应用到所有的该标签"></a>标签选择器就是以标签名作为选择器 并自动将样式应用到所有的该标签</h2><h2 id="类选择器-就是自己在样式标签里用英语状态下的-自定义类名-样式代码-想让哪一个或多个标签使用就在标签里用class-x3D-“自定义类名”最常用"><a href="#类选择器-就是自己在样式标签里用英语状态下的-自定义类名-样式代码-想让哪一个或多个标签使用就在标签里用class-x3D-“自定义类名”最常用" class="headerlink" title="类选择器 就是自己在样式标签里用英语状态下的 .自定义类名 { 样式代码 } 想让哪一个或多个标签使用就在标签里用class&#x3D;“自定义类名”最常用"></a>类选择器 就是自己在样式标签里用英语状态下的 .自定义类名 { 样式代码 } 想让哪一个或多个标签使用就在标签里用class&#x3D;“自定义类名”<del>最常用</del></h2></li><li>调用多个类选择器可以时用空格隔开添加别的类选择器 比如说我有个red 和 blue 这2个类选择器 我都添加到h1标签里应该是 class&#x3D; “red blue”<h2 id="id选择器-一般和js配合使用-类似于类选择器-声明-id名-样式代码-想让哪一个标签使用-就在标签内的id-x3D-id名"><a href="#id选择器-一般和js配合使用-类似于类选择器-声明-id名-样式代码-想让哪一个标签使用-就在标签内的id-x3D-id名" class="headerlink" title="id选择器(一般和js配合使用) 类似于类选择器 #声明 id名{ 样式代码 } 想让哪一个标签使用 就在标签内的id&#x3D;id名"></a>id选择器(一般和js配合使用) 类似于类选择器 #声明 id名{ 样式代码 } 想让哪一个标签使用 就在标签内的id&#x3D;id名</h2></li><li>不过和类选择器最大的不同是 id选择器具有唯一性 正常来说 整个HTML文件里只能调用一次 <h2 id="通配符选择器-用-声明-自定义名-样式代码-创建后自动应用到所有标签上"><a href="#通配符选择器-用-声明-自定义名-样式代码-创建后自动应用到所有标签上" class="headerlink" title="通配符选择器 用*声明 自定义名 { 样式代码 } 创建后自动应用到所有标签上"></a>通配符选择器 用*声明 自定义名 { 样式代码 } 创建后自动应用到所有标签上</h2></li></ul><h1 id="选择器总结"><a href="#选择器总结" class="headerlink" title="选择器总结"></a>选择器总结</h1><p><img src="https://s2.loli.net/2022/04/01/lIcaTZvNRHy61Uk.png" alt="Css选择器总结"></p><h1 id="字体系列-font"><a href="#字体系列-font" class="headerlink" title="字体系列 font"></a>字体系列 font</h1><h2 id="font-family-选择字体"><a href="#font-family-选择字体" class="headerlink" title="font-family 选择字体"></a>font-family 选择字体</h2><ul><li>字体的选择上可以输入字体的中文名 也可以输入 英文名 <del>一般中文名 和 多个单词组成的字体名 需要被单或双引号包括起来</del></li><li>如果一次选择了多个字体 首先判断系统是否有第一款字体 以此类推 如果没有字体可能会显示异常<h2 id="font-size-字体大小-最常用单位是px-像素-也可以百分比之类的"><a href="#font-size-字体大小-最常用单位是px-像素-也可以百分比之类的" class="headerlink" title="font-size 字体大小 最常用单位是px(像素) 也可以百分比之类的"></a>font-size 字体大小 最常用单位是px(像素) 也可以百分比之类的</h2></li><li>一般谷歌浏览器字体默认大小为16px</li><li>标题标签比较特殊 你如果想改body的字体默认大小不会影响到标题标签 需要单独给她设置大小<h2 id="font-weight-字体粗细"><a href="#font-weight-字体粗细" class="headerlink" title="font-weight 字体粗细"></a>font-weight 字体粗细</h2></li><li>属性值 normal 为默认的大小 数字表示为400</li><li>属性值 bold 为粗体 数字表示为700</li><li>属性值 bolder 为特粗体 </li><li>属性值 lighter 为细体</li><li>数字型赋值一般为 100-900 以百分 没有十位个位<h2 id="font-style-字体样式"><a href="#font-style-字体样式" class="headerlink" title="font-style 字体样式"></a>font-style 字体样式</h2></li><li>normal 为浏览器默认样式 <del>也就是正的</del> 一般用来吃饱了把斜体变成正体</li><li>italic 为斜体 一般用来花里胡哨把正体变成斜体<h2 id="font-属性的复合写法-快捷方便"><a href="#font-属性的复合写法-快捷方便" class="headerlink" title="font 属性的复合写法 (快捷方便)"></a>font 属性的复合写法 (快捷方便)</h2></li><li>复合写法必须按顺序 先 style 再 weight 然后 size&#x2F;line-height 最后 family 各属性空格隔开</li><li>如果不需要部分的属性可以不写 不写默认按默认值算 但不可忽略size 和 family 不然属性无效<h1 id="字体属性总结"><a href="#字体属性总结" class="headerlink" title="字体属性总结"></a>字体属性总结</h1><img src="https://s2.loli.net/2022/04/01/53tlzhIgfQVmF4i.png" alt="字体属性总结"><h2 id="color-定义文本颜色-分三种格式-开发中常用十六进制"><a href="#color-定义文本颜色-分三种格式-开发中常用十六进制" class="headerlink" title="color 定义文本颜色 分三种格式 开发中常用十六进制"></a>color 定义文本颜色 分三种格式 开发中常用十六进制</h2></li><li>预定义颜色值 red blue green之类的 </li><li>十六进制 #XXXXXX</li><li>rgb代码 rgb(xxx,xxx,xxx)或rgb(xxx%,xxx%,xxx%)<h1 id="text-align-设置文字水平对其的方式"><a href="#text-align-设置文字水平对其的方式" class="headerlink" title="text-align 设置文字水平对其的方式"></a>text-align 设置文字水平对其的方式</h1></li><li>属性值 left 左对其 （默认）</li><li>属性值 center 居中对齐</li><li>属性值 right 右对其<h1 id="text-decoration-装饰文本-（比如说-删除线条-下划线-上划线）"><a href="#text-decoration-装饰文本-（比如说-删除线条-下划线-上划线）" class="headerlink" title="text-decoration 装饰文本 （比如说 删除线条 下划线 上划线）"></a>text-decoration 装饰文本 （比如说 删除线条 下划线 上划线）</h1></li><li>属性值 none 默认 没有线条修饰 （一般用于消除链接文本的下划线）</li><li>属性值 underline 下划线 （a链接标签自带下划线）</li><li>overline 上划线 </li><li>line-through 删除线<h1 id="text-indent-文本缩进"><a href="#text-indent-文本缩进" class="headerlink" title="text-indent 文本缩进"></a>text-indent 文本缩进</h1></li><li>缩进的单位可是px像素 也可以是em当前元素的字体的大小<h1 id="text-height-行间距也就是行高"><a href="#text-height-行间距也就是行高" class="headerlink" title="text-height 行间距也就是行高"></a>text-height 行间距也就是行高</h1></li><li>行间距的算法是 上间距+文字大小+下间距<h1 id="文本属性总结"><a href="#文本属性总结" class="headerlink" title="文本属性总结"></a>文本属性总结</h1> <img src="https://s2.loli.net/2022/04/01/RXbmLJG9ByPdYo5.png" alt="文本属性总结"><h1 id="CSS的引入方式-分为3种"><a href="#CSS的引入方式-分为3种" class="headerlink" title="CSS的引入方式 (分为3种)"></a>CSS的引入方式 (分为3种)</h1><h2 id="内部样式（也叫内部样式表）"><a href="#内部样式（也叫内部样式表）" class="headerlink" title="内部样式（也叫内部样式表）"></a>内部样式（也叫内部样式表）</h2></li><li>就是把css写在html文件内</li><li>理论上style(样式标签)可以写在html的任何位置 但一般规范是写在head内title下</li><li>优点 方便控制整个页面的元素样式设置 代码 结构清晰</li><li>缺点 没有完全实现结构和样式的分离(还不是写在html里，只不过规定了个地方拉)<h2 id="行内样式（也就行内样式表）"><a href="#行内样式（也就行内样式表）" class="headerlink" title="行内样式（也就行内样式表）"></a>行内样式（也就行内样式表）</h2></li><li>就是把css写在标签内 直接style(样式标签): “font size: 30px; color: red;” 这种的 记得英文双引号</li><li>优点 快速改变单个标签</li><li>缺点 要是写很多样式就非常繁琐<h2 id="外部样式-单独创建css文件写样式-html里引用-css文件里不需要写style标签"><a href="#外部样式-单独创建css文件写样式-html里引用-css文件里不需要写style标签" class="headerlink" title="外部样式 (单独创建css文件写样式 html里引用)css文件里不需要写style标签"></a>外部样式 (单独创建css文件写样式 html里引用)<del>css文件里不需要写style标签</del></h2></li><li>html里使用link 标签引用 (link是个单标签)</li><li>属性 rel 定义当前文件于被引用文件的关系 引用css文件时 值指定为stylesheet 表示被引用的</li><li>属性 href 值为被引用文件的绝对路径或相对路径<h1 id="CSS引入方式总结"><a href="#CSS引入方式总结" class="headerlink" title="CSS引入方式总结"></a>CSS引入方式总结</h1><img src="https://s2.loli.net/2022/04/01/hZ1QXINCqLSdWBM.png" alt="Css引入方式总结"><h1 id="选择器是由基础选择器和复合选择器两大类"><a href="#选择器是由基础选择器和复合选择器两大类" class="headerlink" title="选择器是由基础选择器和复合选择器两大类"></a>选择器是由基础选择器和复合选择器两大类</h1><h3 id="问：那么复合选择器是什么呢？-答：复合选择器其实就是2个或多个基础选择器通过不同方式组合而成"><a href="#问：那么复合选择器是什么呢？-答：复合选择器其实就是2个或多个基础选择器通过不同方式组合而成" class="headerlink" title="问：那么复合选择器是什么呢？ 答：复合选择器其实就是2个或多个基础选择器通过不同方式组合而成"></a>问：那么复合选择器是什么呢？<br> 答：复合选择器其实就是2个或多个基础选择器通过不同方式组合而成</h3><h3 id="常用的复合选择器是后代选择器-子选择器-并集选择器-伪类选择器等等"><a href="#常用的复合选择器是后代选择器-子选择器-并集选择器-伪类选择器等等" class="headerlink" title="常用的复合选择器是后代选择器 子选择器 并集选择器 伪类选择器等等"></a>常用的复合选择器是后代选择器 子选择器 并集选择器 伪类选择器等等</h3><h2 id="后代选择器-重要-也可以看作套娃选择器"><a href="#后代选择器-重要-也可以看作套娃选择器" class="headerlink" title="后代选择器 (重要) 也可以看作套娃选择器"></a>后代选择器 (重要) <del>也可以看作套娃选择器</del></h2></li><li>语法 选择器1 选择器2 选择器3 { 样式代码 } </li><li>解析 选择器1包裹着选择器2 选择器2包裹着选择器3 <br>样式代码只修改被选择器1包裹的选择器2里的选择器3的样式<br>这里可以把选择器理解为元素</li><li>坑点 注意元素之间得空格 1 2 3 元素可以是任何基础选择器 比如说可以 .类名(代表调用这个类的标签) 标签(被包含的标签) { 样式代码 }<h2 id="子代选择器-（亲儿子选择器）只选择最亲的儿子元素"><a href="#子代选择器-（亲儿子选择器）只选择最亲的儿子元素" class="headerlink" title="子代选择器 （亲儿子选择器）只选择最亲的儿子元素"></a>子代选择器 （亲儿子选择器）只选择最亲的儿子元素</h2></li><li>语法 爹选择器 &gt; 儿子选择器 <br>这里可以把选择器理解为元素 其实也就是父级关系</li><li>解析 只选择爹选择器最近指定的儿子选择器<h2 id="并集选择器-用于集体声明-一次将多个不同的标签设置相同的元素"><a href="#并集选择器-用于集体声明-一次将多个不同的标签设置相同的元素" class="headerlink" title="并集选择器 用于集体声明 一次将多个不同的标签设置相同的元素"></a>并集选择器 用于集体声明 一次将多个不同的标签设置相同的元素</h2></li><li>语法 选择器1, 换行 选择器2, 换行 选择器3 { 样式代码 } <br>这里可以把选择器理解为元素</li><li>解析 选择器1 2 3 全部都被应用了样式 在最后之前的选择器名后都得加,然后回车 {其实回车是规范要求你不也行}<h2 id="伪类选择器-一般给某些选择器添加特殊效果-且用-表明"><a href="#伪类选择器-一般给某些选择器添加特殊效果-且用-表明" class="headerlink" title="伪类选择器 一般给某些选择器添加特殊效果 且用:表明"></a>伪类选择器 一般给某些选择器添加特殊效果 且用:表明</h2><h3 id="链接伪类"><a href="#链接伪类" class="headerlink" title="链接伪类"></a>链接伪类</h3></li><li>a:link 选择所有未被访问的链接</li><li>a:visited 选择所有已被访问的链接</li><li>a:hover 选择目前鼠标位置上的链接</li><li>a:active 选择活动链接(比如说鼠标点击并未松开)</li><li>链接伪类具有顺序性 如果顺序不对会无效果<h3 id="焦点伪类-focus-更改获取焦点的表单样式-一般配合input使用-也就是表单元素"><a href="#焦点伪类-focus-更改获取焦点的表单样式-一般配合input使用-也就是表单元素" class="headerlink" title="焦点伪类 focus 更改获取焦点的表单样式 一般配合input使用(也就是表单元素)"></a>焦点伪类 focus 更改获取焦点的表单样式 一般配合input使用(也就是表单元素)</h3></li><li>语法 input:focus<h1 id="选择器总结-1"><a href="#选择器总结-1" class="headerlink" title="选择器总结"></a>选择器总结</h1><img src="https://s2.loli.net/2022/04/02/MWexpXVK9yvjAnB.png" alt="选择器总结"><h1 id="CSS的元素显示模式分为两大类"><a href="#CSS的元素显示模式分为两大类" class="headerlink" title="CSS的元素显示模式分为两大类"></a>CSS的元素显示模式分为两大类</h1><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2></li></ul><ol><li>比较霸道 自己独占一行</li><li>高度 宽度 内外边距 都可以控制</li><li>宽度默认是父类容器的宽度</li><li>是一个容器及盒子，里面可以放块级元素和行内元素<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3></li></ol><ul><li>文字类元素内不能使用块级元素 比如说 P h这种的 绝对不行！ <del>虽然浏览器编译出可能不会有显示问题</del><h2 id="行内元素-一行可以放很多个"><a href="#行内元素-一行可以放很多个" class="headerlink" title="行内元素 一行可以放很多个"></a>行内元素 一行可以放很多个</h2><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3></li><li>链接里面不能再放链接 <del>链接:我去哪？</del></li><li>长 宽 不能直接设置</li><li>默认宽度就是内容本身的宽度</li><li>行内元素不能放块元素 但特殊情况下a可以放块级元素 不过需要转换才安全<h2 id="行内块元素-拥有着行内-和-块-元素的部分特征-人妖"><a href="#行内块元素-拥有着行内-和-块-元素的部分特征-人妖" class="headerlink" title="行内块元素 拥有着行内 和 块 元素的部分特征 人妖"></a>行内块元素 拥有着行内 和 块 元素的部分特征 <del>人妖</del></h2></li><li>这种元素常见的是img td input</li><li>它们的高度 宽度 内外边距可以直接设置（块元素特性）</li><li>它们的宽度就是内容本身的宽度 （行内元素特性）</li><li>一行可以有多个行内块元素 （行内元素特性）</li><li>和相邻的行内元素 行内块元素 会出现空白缝隙（自身特性）<h1 id="元素显示模式总结"><a href="#元素显示模式总结" class="headerlink" title="元素显示模式总结"></a>元素显示模式总结</h1><img src="https://s2.loli.net/2022/04/02/jwMt9ilL8ucaNzg.png" alt="元素显示模式总结"><h1 id="元素显示模式的转换-人们常说-想要成为别人必要舍弃自己"><a href="#元素显示模式的转换-人们常说-想要成为别人必要舍弃自己" class="headerlink" title="元素显示模式的转换 人们常说 想要成为别人必要舍弃自己"></a>元素显示模式的转换 人们常说 想要成为别人必要舍弃自己</h1></li><li>转换为行内元素 display:block; 获得行内元素的特性但舍弃了自己本有的</li><li>转换为块元素 display:inline; 获得块元素的特性但舍弃了自己本有的</li><li>转换为行内块元素 display:inline-block; 获得全部的力量但有所瑕疵<h1 id="CSS如何让块元素内的单行文本居中？"><a href="#CSS如何让块元素内的单行文本居中？" class="headerlink" title="CSS如何让块元素内的单行文本居中？"></a>CSS如何让块元素内的单行文本居中？</h1></li><li>首先直接改属性是没有的 不要想着 align: center了！</li><li>那么我们应该换思路 一个块元素本质上也就是一个块 </li><li>那么它就有最大高度 height(容器的高度)</li><li>那么我们可以修改link-height(一行的高度)与height(容器高度一样)那么文字就会居中了</li><li>为什么呢？ 因为行高的组成其实也就是 上下间距+文本高度</li><li>如果行高为40 字体大小为20 那么上下间距分别为10</li><li>此时如果容器的高度也是40 那么是不是字就被上下等高的间距挤在了中间了呢？  NB!!!!<h1 id="CSS的背景"><a href="#CSS的背景" class="headerlink" title="CSS的背景"></a>CSS的背景</h1><h2 id="background-color-背景颜色"><a href="#background-color-背景颜色" class="headerlink" title="background-color 背景颜色"></a>background-color 背景颜色</h2></li><li>如果不填颜色值 默认为透明 transparent(透明的)</li><li>容器默认是透明 不需要手动写 <del>这就是点空的地方弹广告的原理吗？</del></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库函数依赖</title>
    <link href="/2022/03/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96/"/>
    <url>/2022/03/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96/</url>
    
    <content type="html"><![CDATA[<h1 id="函数依赖"><a href="#函数依赖" class="headerlink" title="函数依赖"></a>函数依赖</h1><h3 id="是指关系中各属性或属性组之间的相互依赖关系。它是关系规范化的理论基础。"><a href="#是指关系中各属性或属性组之间的相互依赖关系。它是关系规范化的理论基础。" class="headerlink" title="是指关系中各属性或属性组之间的相互依赖关系。它是关系规范化的理论基础。"></a>是指关系中各属性或属性组之间的相互依赖关系。它是关系规范化的理论基础。</h3><span id="more"></span><h1 id="函数依赖的定义"><a href="#函数依赖的定义" class="headerlink" title="函数依赖的定义"></a>函数依赖的定义</h1><h3 id="给定一个关系模型R，X和Y都是R的属性或属性组，对于X的每个确定值在何时何刻Y都只有一个唯一确定的值与之对应，则称”X函数决定Y”或称为”Y函数依赖于X“，X称为决定因素，记为X→Y"><a href="#给定一个关系模型R，X和Y都是R的属性或属性组，对于X的每个确定值在何时何刻Y都只有一个唯一确定的值与之对应，则称”X函数决定Y”或称为”Y函数依赖于X“，X称为决定因素，记为X→Y" class="headerlink" title="给定一个关系模型R，X和Y都是R的属性或属性组，对于X的每个确定值在何时何刻Y都只有一个唯一确定的值与之对应，则称”X函数决定Y”或称为”Y函数依赖于X“，X称为决定因素，记为X→Y"></a>给定一个关系模型R，X和Y都是R的属性或属性组，对于X的每个确定值在何时何刻Y都只有一个唯一确定的值与之对应，则称”X函数决定Y”或称为”Y函数依赖于X“，X称为决定因素，记为X→Y</h3><h1 id="函数依赖的种类"><a href="#函数依赖的种类" class="headerlink" title="函数依赖的种类"></a>函数依赖的种类</h1><ul><li>完全函数依赖：如果属性Y函数依赖于复合属性X，且不和X的任何子集函数相依赖，则称”Y完全依赖余函数X“</li><li>部分函数依赖：对于一个函数依赖：X→Y，如果存在Z∈X（Z属于X）,且有Z→Y成立，则称”Y部分函数依赖于X“</li><li>传递函数依赖：在关系模式中，如果X→Y（不能Y→X),Y→Z，若存在X→Z，则称”Z传递依赖于X“</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL Server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5基础</title>
    <link href="/2022/03/26/HTML5%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/03/26/HTML5%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p><del>不过是写给呆宝的笔记罢了</del><span id="more"></span></p><h1 id="关于HTML5字体的加粗-斜体-删除线-下划线-标签"><a href="#关于HTML5字体的加粗-斜体-删除线-下划线-标签" class="headerlink" title="关于HTML5字体的加粗 斜体 删除线 下划线 标签"></a>关于HTML5字体的加粗 斜体 删除线 下划线 标签</h1><ol><li>strong 和 b 一般推荐使用strong来加粗语义更强烈</li><li>em 和 i 一般推荐使用em来斜体语义更强烈</li><li>del 和 s 一般推荐del来添加删除线语义更强烈</li><li>ins 和 u 一般推荐使用ins来添加下划线语义更强</li></ol><h1 id="容器标签-本身没有语义"><a href="#容器标签-本身没有语义" class="headerlink" title="容器标签 本身没有语义"></a>容器标签 本身没有语义</h1><ul><li>div 占一整行 大盒子</li><li>span 一行可以有很多个 小盒子</li></ul><h1 id="图片标签-img-也就是image的缩写-PS-单标签"><a href="#图片标签-img-也就是image的缩写-PS-单标签" class="headerlink" title="图片标签 img 也就是image的缩写 PS:单标签"></a>图片标签 img 也就是image的缩写 PS:单标签</h1><ul><li>她有以下属性↓</li></ul><ol><li>src 是必须的属性 指定图像的 路径 文件名 得看 绝对路径 相对路径</li><li>alt 当图片显示失败时 显示的文字</li><li>title 当鼠标移动到图片时出现的文字</li><li>width 设置宽度</li><li>height 设置高度</li><li><del>border 设置边框粗细</del> HTML5已舍弃</li></ol><h2 id="相对路径-和-绝对路径-怕有人分不清特意说一下"><a href="#相对路径-和-绝对路径-怕有人分不清特意说一下" class="headerlink" title="相对路径 和 绝对路径 怕有人分不清特意说一下"></a>相对路径 和 绝对路径 <del>怕有人分不清特意说一下</del></h2><h3 id="相对路径-有三种情况-以被引用文件的所在位置为参考基础"><a href="#相对路径-有三种情况-以被引用文件的所在位置为参考基础" class="headerlink" title="相对路径 有三种情况 以被引用文件的所在位置为参考基础"></a>相对路径 有三种情况 以被引用文件的所在位置为参考基础</h3><ul><li>同级 和被引用文件在一起<br>比如说 引用文件在 D:\HTML5\引用文件.html 被引用文件在 D:\HTML5\被引用文件.jpg <br>她们都在一起所以为同级</li><li>下级 被引用文件处于引用文件的下层 <br>这时候就得用 &#x2F; 表示去往下一级<br>引用文件在 D:\HTML5\引用文件.html 被引用文件在 D:\HTML5\被引用文件夹\被引用文件.jpg <br>被引用文件在被引用文件夹里<br>被引用文件夹在HTML5文件夹下<br>所以被引用文件是在引用文件的下级<br>相对路径表示为 被引用文件夹&#x2F;被应用文件.jpg</li><li>上级 和下级相反 被引用文件处于引用文件上层 这时候就得用 ..&#x2F; 表示返回上一级</li></ul><h3 id="绝对路径-从盘符开始直达目标文件位置"><a href="#绝对路径-从盘符开始直达目标文件位置" class="headerlink" title="绝对路径 从盘符开始直达目标文件位置"></a>绝对路径 从盘符开始直达目标文件位置</h3><ul><li>用\去往下一级 <del>上面的比如说里就用的绝对路径表示</del></li><li>可以填入网络上的绝对地址 <del>比如说一个图片的链接</del></li></ul><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><ul><li>声明方式 a anchor的缩写 anchor名词：锚、靠山、台柱子 动词：抛锚、使稳固、主持节目</li><li>href 跳转目标 必须属性</li><li>target 窗口弹出方式 target 名词：目标、圆形小盾、靶子、对象 动词：选择目标、瞄准、把…作为目标、面向<br> 不填写默认_self 还可以用_blank<br>_self的话就会用当前页面打开目标网页老的自然被顶替为新的<br>_blank的话会新打开一个窗口打开目标网页</li></ul><h2 id="链接类别"><a href="#链接类别" class="headerlink" title="链接类别"></a>链接类别</h2><ul><li>外部链接 一般为<a href="http://www.baidu.com/">http://www.baidu.com</a> 这种 不属于网站内部拥有的</li><li>内部链接 为网站内部页面之间的相互链接 用相对路径 或绝对路径即可</li><li>空链接 简而言之就是点了没反应的链接 把href的值设置为#即可</li><li>下载链接 把href的值设置为你想给人下载文件的位置 </li><li>网页元素链接 点击网页中的元素即可跳转 <a href="http://www.baidu.com"><img src="https://sm.ms/image/bIsm6Q2hFEjgiVl" alt="点我进百度"> </a></li><li>锚点链接 可以理解为网页上的目录点 点击即可快速跳转到想看的部分<br>语法: href&#x3D;”#自定义名”  然后找到想要跳转到的标签 添加id属性值为自定义名</li></ul><h1 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h1><ul><li>!–我是被注释的文本–</li></ul><h1 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h1><ul><li>table 创建表格</li><li>tr 定义表格中的行 必须嵌套在table里    </li><li>td 定义表格中的单元格 必须嵌套在tr里</li><li>th 表头单元格将里面的内容加粗居中显示</li></ul><h1 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h1><ul><li>align 规定对齐方式</li><li>border 规定是否有边框<del>默认没有</del></li><li>cellpadding 规定单元与内容之间的空白，默认为1</li><li>cellspacing 规定单元格与单元格之间的空白 默认为2</li></ul><h1 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h1><ul><li>thead 表格头部标签里面必须含有hr</li><li>tbody 表格主体标签里面一般存放数据主体</li></ul><h1 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h1><h2 id="一般分为2种常见情况-跨行合并-跨列合并"><a href="#一般分为2种常见情况-跨行合并-跨列合并" class="headerlink" title="一般分为2种常见情况 跨行合并 跨列合并"></a>一般分为2种常见情况 跨行合并 跨列合并</h2><ul><li>跨列合并 将合并代码写在想合并的单元格中最左侧的单元格 语法:colspan&#x3D;“你合并的数量” 然后将被合并的单元格标签删除</li><li>跨行合并 将合并代码写在想合并的单元格中最上面的单元格 语法:rowspan&#x3D;“你合并的数量” 然后将被合并的单元格标签删除</li></ul><h1 id="列表标签-重要！"><a href="#列表标签-重要！" class="headerlink" title="列表标签(重要！)"></a>列表标签(重要！)</h1><ul><li>无序列表 ul创建无序列表 li添加列表项<br> ul里只能放li标签 其他都不行！<br>但li里面什么都可以放</li><li>有序列表 ol创建有序列表 li添加列表项<br> ul里只能放li标签 其他都不行！<br>但li里面什么都可以放</li><li>自定义列表 dl创建自定义列表 dt 定义项目 dd添加项目描述<br> dl里只能放dt和dd 其他都不行！<br> dt和dd的数量不限 但通常一个dt带很多dd<br>dt和dd里什么都可以放</li></ul><h1 id="表单的组成"><a href="#表单的组成" class="headerlink" title="表单的组成"></a>表单的组成</h1><h2 id="一个网站注册往往都是以表单的方式得到用户信息，但一个完整的表单是由-表单域-表单控件-提示信息-三部分组成"><a href="#一个网站注册往往都是以表单的方式得到用户信息，但一个完整的表单是由-表单域-表单控件-提示信息-三部分组成" class="headerlink" title="一个网站注册往往都是以表单的方式得到用户信息，但一个完整的表单是由 表单域 表单控件 提示信息 三部分组成"></a>一个网站注册往往都是以表单的方式得到用户信息，但一个完整的表单是由 表单域 表单控件 提示信息 三部分组成</h2><h3 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h3><ul><li>标签 form</li><li>属性 action 属性值 url地址 用于指定接受并处理表单数据的服务器程序的url地址</li><li>属性 method 属性值 get&#x2F;post 用于设置表单的数据提交方式</li><li>属性 name 属性值 名称 用于命名表单域 方便区分<h3 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h3><h2 id="input-输入-为单标签"><a href="#input-输入-为单标签" class="headerlink" title="input  输入 为单标签"></a>input  输入 为单标签</h2></li></ul><ol><li>属性name 属性值 用户定义 定义input元素的名称 有radio和checkbox的input标签一般会同名 否则单选和多选会异常</li><li>属性value 属性值 用户定义 定义input元素的值 写给后端看的</li><li>属性checked 属性值 checked<del>这不是一样吗？</del> 针对于单选框和复选框 用于网站打开时默认选中</li><li>属性maxlength 属性值 正整数 限制表单输入的最大字符数</li></ol><br><h2 id="input包含一个必须输入属性-type-根据type接收的值-输入字段有很多形式"><a href="#input包含一个必须输入属性-type-根据type接收的值-输入字段有很多形式" class="headerlink" title="input包含一个必须输入属性 type 根据type接收的值 输入字段有很多形式"></a>input包含一个必须输入属性 type 根据type接收的值 输入字段有很多形式</h2><ol><li>text 当type的值为text时 即是一个普通的输入框</li><li>password 当type的值为password时 即是一个输入字符被特定隐藏符合替代的的输入框</li><li>radio 当type的值为radio时 即是一个圆形单选按钮</li><li>checkbox 当type的值为checkbox时 即是一个正方形的多选框 </li><li>submit 当type的值为submit时 即是一个提交按钮 作用是提交数据给已指定的服务器 按钮显示的名字默认就是提交 更改value的值也会更改按键显示的值</li><li>reset 当type的值为reset时 即是一个重置按钮 作用是重置表格域里所有input元素的值 按键显示的名字就是重置 更改value的值也会更改按键显示的值</li><li>button 当type的值为button是 即是一个普通按钮 作用一般绑定js使用 按键显示的名字默认什么都没有 更改value的值也会更改按键显示的值</li><li>file 当type的值为file时 即是一个选择文件按钮 作用就是选择文件上传</li></ol><h2 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a>label 标签</h2><ol><li>用于绑定某个表单元素 点击label标签讲焦点跳到绑定的表单元素</li><li>语法：属性for绑定表单控件的id的值<del>如果没有就去表单控件里添加id并赋值</del></li></ol><h2 id="select-下拉标签"><a href="#select-下拉标签" class="headerlink" title="select 下拉标签"></a>select 下拉标签</h2><ol><li>作用 点击后展开一个列表 里面的值由option创建</li><li>在option里添加属性selected&#x3D;selected 即可设置该option为默认选项</li></ol><h2 id="textarea-文本域"><a href="#textarea-文本域" class="headerlink" title="textarea 文本域"></a>textarea 文本域</h2><ol><li>文本域就是个可以输入多行的文本框</li><li>她有2个属性 cols rows</li><li>cols一行最多多少字</li><li>rows最多多少行<h1 id="emmet语法-补充内容提升开发效率"><a href="#emmet语法-补充内容提升开发效率" class="headerlink" title="emmet语法 (补充内容提升开发效率)"></a>emmet语法 (补充内容<del>提升开发效率</del>)</h1><h2 id="一般情况下打标签需要慢慢打-非常缓慢-下面就会介绍emmet语法快速偷懒"><a href="#一般情况下打标签需要慢慢打-非常缓慢-下面就会介绍emmet语法快速偷懒" class="headerlink" title="一般情况下打标签需要慢慢打 非常缓慢 下面就会介绍emmet语法快速偷懒"></a>一般情况下打标签需要慢慢打 非常缓慢 下面就会介绍emmet语法快速偷懒</h2></li></ol><ul><li>如果想打标签 比如说 &lt; p &gt; &lt; &#x2F;p &gt; 直接写p 然后tab 会自动补全</li><li>如果我想打多个重复的标签 比如说5个&lt; p &gt;&lt; &#x2F;p &gt; 可以直接 p*5 tab补全 会出现5个p段落</li><li>如果想打出很多类似重复的 比如说h1的 我说1 我说2 我说3 我说4 可以 h1{我说$}*5 $是自增从1开始的 {}里面写的是文字</li><li>如果想补全时添加选择器 可以 .类名html标签 或#id名 html标签<br></li></ul><h3 id="ps-自动补全不能有异常空格-比如说-h1-我是不会自动补全的-得h1-我会自动补全-其次光标得在末尾"><a href="#ps-自动补全不能有异常空格-比如说-h1-我是不会自动补全的-得h1-我会自动补全-其次光标得在末尾" class="headerlink" title="ps:自动补全不能有异常空格 比如说 h1 {我是不会自动补全的} 得h1{我会自动补全}   其次光标得在末尾"></a>ps:自动补全不能有异常空格 比如说 h1 {我是不会自动补全的} 得h1{我会自动补全}   其次光标得在末尾</h3>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库创建命令</title>
    <link href="/2022/03/25/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/03/25/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="今天学上课学了数据库的常用命令"><a href="#今天学上课学了数据库的常用命令" class="headerlink" title="今天学上课学了数据库的常用命令"></a>今天学上课学了数据库的常用命令</h1><span id="more"></span><h6 id="注释：-包起来的值做修饰作用-部分-中的值可以省略-因为就算不写也默认"><a href="#注释：-包起来的值做修饰作用-部分-中的值可以省略-因为就算不写也默认" class="headerlink" title="注释：[]包起来的值做修饰作用 部分[]中的值可以省略 因为就算不写也默认"></a>注释：[]包起来的值做修饰作用 部分[]中的值可以省略 <del>因为就算不写也默认</del></h6><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ol><li>数据库语言不区分大小写</li><li>语句用,隔开</li><li>（）是描述作用域</li><li>mdf是主数据文件后缀</li><li>ndf是次数据文件后缀</li><li>ldf是日志文件的后缀</li><li>逻辑名可以理解为文件名</li><li>物理位置可以理解为完整路径</li><li>主数据文件只有一个</li><li>修改初始大小时只能大不能小<del>这不是废话吗，我存了20M你改成最大14，剩下的6难不成删了吗？</del></li><li>删除文件组必须得是组内无文件时才被允许的</li><li>除了新建数据库时不需要指定数据库 其他操作基本上都得使用 ALTER DATABASE [被指定的数据库名字] 来指定数据库进行操作</li><li>添加和创建都需要添加描述 描述最低得有 NAME AND FILENAME</li></ol><hr><h1 id="数据库设计问题分为四种"><a href="#数据库设计问题分为四种" class="headerlink" title="数据库设计问题分为四种"></a>数据库设计问题分为四种</h1><ul><li>数据更新问题 </li><li>数据插入问题</li><li>数据删除问题</li><li>数据冗余问题</li></ul><h1 id="查看数据库命令"><a href="#查看数据库命令" class="headerlink" title="查看数据库命令"></a>查看数据库命令</h1><h2 id="exec-SP-HELPDB-指定想看的数据库名"><a href="#exec-SP-HELPDB-指定想看的数据库名" class="headerlink" title="[exec] SP_HELPDB [指定想看的数据库名]"></a>[exec] SP_HELPDB [指定想看的数据库名]</h2><h2 id="如果不指定就展示所有数据库"><a href="#如果不指定就展示所有数据库" class="headerlink" title="如果不指定就展示所有数据库"></a>如果不指定就展示所有数据库</h2><h2 id="如果语句是在第一批处理的第一句话-可以省略exec"><a href="#如果语句是在第一批处理的第一句话-可以省略exec" class="headerlink" title="如果语句是在第一批处理的第一句话 可以省略exec"></a>如果语句是在第一批处理的第一句话 可以省略exec</h2><h2 id="如果不是一个批处理的第一个语句就得加exec-或者在前面加GO关键字-让后面的语句成为新的一批"><a href="#如果不是一个批处理的第一个语句就得加exec-或者在前面加GO关键字-让后面的语句成为新的一批" class="headerlink" title="如果不是一个批处理的第一个语句就得加exec 或者在前面加GO关键字 让后面的语句成为新的一批"></a>如果不是一个批处理的第一个语句就得加exec 或者在前面加GO关键字 让后面的语句成为新的一批</h2><hr><h1 id="部分属性"><a href="#部分属性" class="headerlink" title="部分属性"></a>部分属性</h1><ul><li>SIZE 为文件默认的初始大小</li><li>MAXSIZE 为文件最大的大小 <del>这看英文都知道了</del> 如果需要设置为不受限制的 值赋为unlimited</li><li>FILEGROWTH 为增长大小 可以设置百分比</li><li>↑这些计量默认都是MB</li><li>FILE 文件逻辑名 <del>也就是文件名</del></li><li>FILENAME 磁盘文件名 <del>也就是完整路径</del></li><li>NAME 文件名<hr></li></ul><h1 id="部分创建命令"><a href="#部分创建命令" class="headerlink" title="部分创建命令"></a>部分创建命令</h1><ul><li>CREATE DATABASE 数据库名字 创建数据库</li><li>on [PRIMARY] 创建主组PRIMARY 主组无法创建时自定义名字 </li><li>FILEGROUP [次组名] 创建次组</li><li>LOG on 创建日志文件<hr></li></ul><h1 id="部分删除命令"><a href="#部分删除命令" class="headerlink" title="部分删除命令"></a>部分删除命令</h1><ul><li>REMOVE FILE [文件名] 删除文件</li><li>REMOVE FILEGROUP [文件组名] 删除文件组</li><li>DROP DATABASE [数据库名] 删除数据库 <del>删库跑路</del></li></ul><hr><h1 id="部分添加命令"><a href="#部分添加命令" class="headerlink" title="部分添加命令"></a>部分添加命令</h1><ul><li>ADD FILEGROUP [文件组名] 添加文件组</li><li>ADD FILE [文件名] 添加文件 TO FILEGROUP [文件组] 到指定的文件组</li><li>ADD LOG FILE [日志文件名]</li></ul><hr><h1 id="部分修改命令"><a href="#部分修改命令" class="headerlink" title="部分修改命令"></a>部分修改命令</h1><ul><li>MODIFY FILE [被修改的文件名] 修改文件</li></ul><p><img src="https://s2.loli.net/2022/03/25/bIsm6Q2hFEjgiVl.jpg" alt="乐土猫猫"></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL Server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HelloWorld</title>
    <link href="/2022/03/25/helloWorld/"/>
    <url>/2022/03/25/helloWorld/</url>
    
    <content type="html"><![CDATA[<h1 id="把一切推到重来也许会有不一样的感受"><a href="#把一切推到重来也许会有不一样的感受" class="headerlink" title="把一切推到重来也许会有不一样的感受"></a>把一切推到重来也许会有不一样的感受</h1>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
